getOption("Repos")
library(readr)
Auto <- read_csv("Auto.csv")
View(Auto)
attach(Auto)
which(is.na(mpg))
which(is.na(cylinders))
which(is.na(displacement))
which(is.na(horsepower))
which(is.na(weight))\
which(is.na(weight))
which(is.na(acceleration))
which(is.na(year))
which(is.na(origin))
which(is.na(Auto))
which(is.na(horsepower[1:33]))
which(is.na(horsepower[1:33]))
which(is.na(Auto$horsepower))
median(horsepower)
mode(horsepower)
`mode<-`(horsepower)
mode(Auto$horsepower)
my_mode <- function(x) {
unique_x <- unique(x)
tabulate_x <- tabulate(match(x, unique_x))
unique_x[tabulate_x == max(tabulate_x)]
}
my_mode(horsepower)
save.image("~/R/Auto.RData")
is.na(horsepower)
any(is.na(horsepower))
which(is.na(horsepower))
save()
save(Auto)
library(readr)
Auto <- read_csv("Auto.csv")
View(Auto)
attach(Auto)
which(is.na(mpg))
which(is.na(cylinders))
which(is.na(displacement))
which(is.na(horsepower))
which(is.na(weight))
which(is.na(acceleration))
which(is.na(year))
which(is.na(origin))
median(horsepower)
library(readr)
Auto <- read_csv("Auto.csv")
View(Auto)
attach(Auto)
median(horsepower)
my_mode <- function(x) {
+     unique_x <- unique(x)
+     tabulate_x <- tabulate(match(x, unique_x))
+     unique_x[tabulate_x == max(tabulate_x)]
+ }
my_mode <- function(x) {        #statistical mode
unique_x <- unique(x)
tabulate_x <- tabulate(match(x, unique_x))
unique_x[tabulate_x == max(tabulate_x)]
}
my_mode(horsepower)
library(tidyverse)
library(readr)
Auto <- read_csv("Auto.csv")
View(Auto)
attach(Auto)
median(horsepower, na.rm = T)
median(horsepower)
median(horsepower, na.rm = F)
horsepower[is.na(horsepower)] <- median(horsepower, na.rm = T)
print(horsepower)
mean(mpg)
var(mpg)
sd <- function(x) sqrt(var(x))
sd(mpg)
mean(cylinders)
sd(cylinders)
mean(displacement)
sd(displacement)
mean(horsepower)
sd(horsepower)
mean(weight)
sd(weight)
mean(acceleration)
sd(acceleration)
mean(year)
sd(year)
mean(origin)
sd(origin)
mpg <- mpg[-c(10, 85)]
print(mpg)
library(readr)
Auto <- read_csv("Auto.csv")
View(Auto)
which(is.na(origin))
which(is.na(mpg))
which(is.na(cylinders))
which(is.na(Auto$mpg))
which(is.na(Auto$cylinders))
which(is.na(Auto$displacement))
which(is.na(Auto$horsepower))
which(is.na(Auto$weight))
which(is.na(Auto$acceleration))
which(is.na(Auto$year))
which(is.na(Auto$origin))
median(horsepower, na.rm = T)
my_mode <- function(x) {    #statistical mode
unique_x <- unique(x)
tabulate_x <- tabulate(match(x, unique_x))
unique_x[tabulate_x == max(tabulate_x)]
}
my_mode(horsepower, na.rm = T)
my_mode(horsepower)
horsepower[is.na(horsepower)] <- median(horsepower, na.rm = T)
(horsepower)
print(horsepower)
sd <- function(x) sqrt(var(x))
mean(mpg)
sd(mpg)
mean(cylinders)
mean(Auto$mpg)
sd(Auto$mpg)
mean(Auto$cylinders)
sd(Auto$cylinders)
mean(Auto$displacement)
sd(Auto$displacement)
mean(Auto$horsepower)
mean(horsepower)
sd(horsepower)
mean(weight)
mean(Auto$weight)
sd(Auto$weight)
mean(Acceleration)
mean(Auto$Acceleration)
mean(Auto$acceleration)
sd(Auto$acceleration)
mean(year)
mean(Auto$year)
sd(Auto$year)
mean(Auto$origin)
sd(Auto$origin)
clean_mpg <- mpg[-c(10, 85), ]
clean_mpg <- mpg[-c(10, 85)]
print(mpg)
print(clean_mpg)
clean_mpg <- mpg[-c(10:85)]
print(clean_mpg)
clean_mpg <- mpg[-c(10:85)]
print(clean_mpg)
print(mpg)
clean_cylinders <- cylinders[-c(10:85)]
clean_cylinders <- Auto$cylinders[-c(10:85)]
clean_displacement <- Auto$displacement[-c(10:85)]
clean_horsepower <- Auto$horsepower[-c(10:85)]
clean_horsepower <- horsepower[-c(10:85)]
clean-weight <- Auto$weight[-c(10:85)]
clean_acceleration <- Auto$acceleration[-c(10:85)]
clean_weight <- Auto$weight[-c(10:85)]
clean_acceleration <- Auto$acceleration[-c(10:85)]
clean_year <- Auto$year[-c(10:85)]
clean_origin <- Auto$origin[-c(10:85)]
range(clean_mpg)
mean(clean_mpg)
sd(clean_mpg)
range(clean_cylinders)
mean(clean_cylinders)
sd(clean_cylinders)
range(clean_displacement)
mean(clean_displacement)
sd(clean_displacement)
range(clean_horsepower)
mean(clean_horsepower)
sd(clean_horsepower)
range(clean_weight)
mean(clean_weight)
sd(clean_weight)
range(clean_acceleration)
mean(clean_acceleration)
sd(clean_acceleration)
range(clean_year)
mean(clean_year)
sd(clean_year)
range(clean_origin)
mean(clean_origin)
sd(clean_origin)
png(file = "scatterplot_matrices.png")
print(mpg)
print(clean_mpg)
pairs(~mpg + cylinders + displacement + horsepower + weight + acceleration + year + origin, data = Auto, main = "Scatterplot Matrix")
dev.off()
range(cylinders)
range(Auto$cylinders)
rane(mpg)
range(mpg)
plot(x = Auto$cylinders, y = mpg,
xlab = "cylinders",
ylab = "mileage",
xlim = c(1,10),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
plot(x = Auto$cylinders, y = mpg,
xlab = "cylinders",
ylab = "mileage",
xlim = c(1,50),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
plot(x = Auto$cylinders, y = mpg,
xlab = "cylinders",
ylab = "mileage",
xlim = c(1,50),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
plot(x = cylinders, y = mpg,
xlab = "cylinders",
ylab = "mileage",
xlim = c(1,50),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
plot(x = Auto$cylinders, y = Auto$mpg,
xlab = "cylinders",
ylab = "mileage",
xlim = c(1,10),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
range(Auto$displacement)
plot(x = Auto$displacement, y = Auto$mpg,
xlab = "displacement",
ylab = "mileage",
xlim = c(60,460),
ylim = c(1,50),
main = "Displacement vs Mileage"
)
range(horsepower)
plot(x = Auto$horsepower, y = Auto$mpg,
xlab = "horsepower",
ylab = "mileage",
xlim = c(40,250),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
plot(x = Auto$horsepower, y = Auto$mpg,
xlab = "horsepower",
ylab = "mileage",
xlim = c(40,250),
ylim = c(1,50),
main = "Horsepower vs Mileage"
)
range(Auto$weight)
plot(x = Auto$weight, y = Auto$mpg,
xlab = "weight",
ylab = "mileage",
xlim = c(1600,5500),
ylim = c(1,50),
main = "Weight vs Mileage"
)
range(Auto$acceleration)
plot(x = Auto$acceleration, y = Auto$mpg,
xlab = "Acceleration",
ylab = "mileage",
xlim = c(1,25),
ylim = c(1,50),
main = "Acceleration vs Mileage"
)
range(Auto$year)
plot(x = Auto$year, y = Auto$mpg,
xlab = "year",
ylab = "mileage",
xlim = c(50,100),
ylim = c(1,50),
main = "Year vs Mileage"
)
range(Auto$origin)
plot(x = Auto$origin, y = Auto$mpg,
xlab = "origin",
ylab = "mileage",
xlim = c(0,5),
ylim = c(1,50),
main = "Origin vs Mileage"
)
plot(x = Auto$cylinders, y = Auto$mpg,
xlab = "cylinders",
ylab = "mileage",
xlim = c(1,10),
ylim = c(1,50),
main = "Cylinders vs Mileage"
)
plot(x = Auto$displacement, y = Auto$mpg,
xlab = "displacement",
ylab = "mileage",
xlim = c(60,460),
ylim = c(1,50),
main = "Displacement vs Mileage"
)
plot(x = Auto$horsepower, y = Auto$mpg,
xlab = "horsepower",
ylab = "mileage",
xlim = c(40,250),
ylim = c(1,50),
main = "Horsepower vs Mileage"
)
plot(x = Auto$weight, y = Auto$mpg,
xlab = "weight",
ylab = "mileage",
xlim = c(1600,5500),
ylim = c(1,50),
main = "Weight vs Mileage"
)
plot(x = Auto$acceleration, y = Auto$mpg,
xlab = "Acceleration",
ylab = "mileage",
xlim = c(1,25),
ylim = c(1,50),
main = "Acceleration vs Mileage"
)
plot(x = Auto$year, y = Auto$mpg,
xlab = "year",
ylab = "mileage",
xlim = c(50,100),
ylim = c(1,50),
main = "Year vs Mileage"
)
plot(x = Auto$origin, y = Auto$mpg,
xlab = "origin",
ylab = "mileage",
xlim = c(0,5),
ylim = c(1,50),
main = "Origin vs Mileage"
)
load("C:/Users/Wunmi/OneDrive/Documents/R/.RData")
load("C:/Users/jidon/Documents/R/.RData")
